@using System.Net
@using Markdig
@inherits ComponentBase
@inject HtmlRenderService HtmlRenderService
@inject HttpClient HttpClient

@((MarkupString)html)

@code {

    [Parameter] public string DocUrl { get; set; }

    [Parameter] public string MarkdownText { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    string html = "";

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(DocUrl))
        {
            MarkdownText = await this.HttpClient.GetStringAsync(DocUrl);
        }

        if (ChildContent != null)
        {
            MarkdownText = await HtmlRenderService.RenderAsync(ChildContent);
            MarkdownText = WebUtility.HtmlDecode(MarkdownText);
        }

        if (!string.IsNullOrEmpty(MarkdownText))
        {
            MarkdownText = MarkdownText.Trim(' ', '\r', '\n');
            var pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build();
            html = Markdig.Markdown.ToHtml(MarkdownText, pipeline);
        }
        await base.OnParametersSetAsync();
    }

}
