@using AntBlazor.Docs.Localization
@inherits LayoutComponentBase

<AntLayout Class="app-layout" HasSider>
    <AntSider Class="menu-sidebar"
              Collapsible
              Breakpoint="lg"
              Collapsed="isCollapsed"
              CollapsedWidth="0"
              Width="256px"
              OnCollapsedChange="(collapsed)=>isCollapsed = collapsed">
        <NavMenu IsCollapsed="isCollapsed"></NavMenu>
    </AntSider>
    <AntLayout id="BodyContainer">
        <AntHeader>
            <div class="app-header">
                <span class="header-trigger" @onclick="()=>isCollapsed = !isCollapsed">
                    <AntIcon Class="trigger" Type="@(isCollapsed ? "menu-unfold" : "menu-fold")"></AntIcon>
                </span>
                <span class="header-buttons">
                    @if (CurrentLanguage != "en-US")
                    {
                        <AntButton Size="small" Onclick="@(_ => ChangeLanguage("en-US"))">English</AntButton>
                    }
                    else
                    {
                        <AntButton Size="small" Onclick="@(_ => ChangeLanguage("zh-CN"))">简体中文</AntButton>
                    }
                    <a class="github-stars" href="https://github.com/ant-design-blazor/ant-design-blazor">
                        <img alt="GitHub stars" src="https://img.shields.io/github/stars/ant-design-blazor/ant-design-blazor?style=social">
                    </a>
                </span>
            </div>
        </AntHeader>
        <AntContent>
            <div class="inner-content">
                @Body
            </div>
        </AntContent>
        <footer>
            @*<div class="footer-wrap"></div>*@
            <div class="bottom-bar">
                Made with <span class="heart">❤</span> by ant-design-blazor team
            </div>
        </footer>
    </AntLayout>
</AntLayout>

@inject NavigationManager NavigationManager
@inject ILanguageService LanguageService
@code{
    bool isCollapsed { get; set; } = true;

    string CurrentLanguage => LanguageService.CurrentCulture.Name;

    public void ChangeLanguage(string language)
    {
        var currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        var newUrl = currentUrl.IndexOf('/') > 0 ? currentUrl.Substring(currentUrl.IndexOf('/') + 1) : currentUrl;
        NavigationManager.NavigateTo($"{language}/{newUrl}");
    }
}
