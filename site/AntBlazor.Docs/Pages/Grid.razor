<h3>Grid 栅格</h3>



<DemoCard id="grid-demo-basic">
    <Title>基础栅格</Title>
    <Description>
        @(@"
从堆叠到水平排列。
使用单一的一组 `nz-row` 和 `nz-col` 栅格组件，就可以创建一个基本的栅格系统，所有列（`nz-col`）必须放在 `nz-row` 内。
")
    </Description>
    <Demo>
        <Row>
            <Col Span="12">col-12</Col>
            <Col Span="12">col-12</Col>
        </Row>
        <Row>
            <Col Span="8">col-8</Col>
            <Col Span="8">col-8</Col>
            <Col Span="8">col-8</Col>
        </Row>
        <Row>
            <Col Span="6">col-6</Col>
            <Col Span="6">col-6</Col>
            <Col Span="6">col-6</Col>
            <Col Span="6">col-6</Col>
        </Row>
    </Demo>
</DemoCard>



<DemoCard id="grid-demo-Gutter">
    <Title>区块间隔</Title>
    <Description>
        @(@"
栅格常常需要和间隔进行配合，你可以使用 `` 的 `nzGutter` 属性，我们推荐使用 `(16+8n)px` 作为栅格间隔。(n 是自然数)

如果要支持响应式，可以写成 `{ xs: 8, sm: 16, md: 24, lg: 32, xl: 32, xxl: 32 }`。
")
    </Description>
    <Demo>
        <div class="Gutter-example">
            <Row Gutter="16">
                <Col class="Gutter-row" Span="6">
                    <div class="Gutter-box">col-6</div>
                </Col>
                <Col class="Gutter-row" Span="6">
                    <div class="Gutter-box">col-6</div>
                </Col>
                <Col class="Gutter-row" Span="6">
                    <div class="Gutter-box">col-6</div>
                </Col>
                <Col class="Gutter-row" Span="6">
                    <div class="Gutter-box">col-6</div>
                </Col>
            </Row>
        </div>
        <div class="Gutter-example">
            <Row Gutter="Gutter">
                <Col class="Gutter-row" Span="6">
                    <div class="Gutter-box">col-6</div>
                </Col>
                <Col class="Gutter-row" Span="6">
                    <div class="Gutter-box">col-6</div>
                </Col>
                <Col class="Gutter-row" Span="6">
                    <div class="Gutter-box">col-6</div>
                </Col>
                <Col class="Gutter-row" Span="6">
                    <div class="Gutter-box">col-6</div>
                </Col>
            </Row>
        </div>
    </Demo>
    <Styles>
        <style>
            .Gutter-box {
                background: #00a0e9;
                padding: 5px 0;
            }
        </style>
    </Styles>
</DemoCard>

@code
{
    Dictionary<string, int> Gutter = new Dictionary<string, int>()
    {
        ["xs"] = 8,
        ["sm"] = 16,
        ["md"] = 24,
        ["lg"] = 32,
        ["xl"] = 32,
        ["xxl"] = 32
    };
}

<DemoCard id="grid-demo-offset">
    <Title>左右偏移</Title>
    <Description>
        @(@"
列偏移。

使用 `nzOffset` 可以将列向右侧偏。例如，`nzOffset=""4""` 将元素向右侧偏移了 4 个列（column）的宽度。
")
    </Description>
    <Demo>
        <Row>
            <Col Span="8">
                col-8
            </Col>
            <Col Span="8" Offset="8">
                col-8
            </Col>
        </Row>
        <Row>
            <Col Span="6" Offset="6">
                col-6 col-offset-6
            </Col>
            <Col Span="6" Offset="6">
                col-6 col-offset-6
            </Col>
        </Row>
        <Row>
            <Col Span="12" Offset="6">
                col-12 col-offset-6
            </Col>
        </Row>
    </Demo>
</DemoCard>

<DemoCard id="grid-demo-sort">
    <Title>栅格排序</Title>
    <Description>
        @(@"
列排序。

通过使用 `nzPush` 和 `nzPull` 类就可以很容易的改变列（column）的顺序。
")
    </Description>
    <Demo>
        <Row>
            <Col Span="18" Push="6">
                col-18 col-Push-6
            </Col>
            <Col Span="6" Pull="18">
                col-6 col-Pull-18
            </Col>
        </Row>
    </Demo>
</DemoCard>

<DemoCard id="grid-demo-flex">
    <Title>Flex 布局</Title>
    <Description>
        @(@"
布局基础。

子元素根据不同的值 `start`,`center`,`end`,`space-between`,`space-around`，分别定义其在父节点里面的排版方式。
")
    </Description>
    <Demo>
        <div id="flex-demo">
            <p>sub-element Align left</p>
            <Row Justify="start">
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
            </Row>
            <p>sub-element Align center</p>
            <Row Justify="center">
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
            </Row>
            <p>sub-element Align right</p>
            <Row Justify="end">
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
            </Row>
            <p>sub-element monospaced arrangement</p>
            <Row Justify="space-between">
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
            </Row>
            <p>sub-element Align full</p>
            <Row Justify="space-around">
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
                <Col Span="4">col-4</Col>
            </Row>
        </div>
    </Demo>
    <Styles>
        <style>
            #flex-demo .ant-row {
                background-color: rgba(128, 128, 128, 0.08);
            }
        </style>
    </Styles>
</DemoCard>

<DemoCard id="grid-demo-flex-Align">
    <Title>Flex 对齐</Title>
    <Description>
        @(@"
子元素垂直对齐。
")
    </Description>
    <Demo>
        <div>
            <p>Align Top</p>
            <Row Justify="center" Align="top">
                <Col Span="4"><p class="height-100">col-4</p></Col>
                <Col Span="4"><p class="height-50">col-4</p></Col>
                <Col Span="4"><p class="height-120">col-4</p></Col>
                <Col Span="4"><p class="height-80">col-4</p></Col>
            </Row>
            <p>Align Center</p>
            <Row Justify="space-around" Align="middle">
                <Col Span="4"><p class="height-100">col-4</p></Col>
                <Col Span="4"><p class="height-50">col-4</p></Col>
                <Col Span="4"><p class="height-120">col-4</p></Col>
                <Col Span="4"><p class="height-80">col-4</p></Col>
            </Row>
            <p>Align Bottom</p>
            <Row Justify="space-between" Align="bottom">
                <Col Span="4"><p class="height-100">col-4</p></Col>
                <Col Span="4"><p class="height-50">col-4</p></Col>
                <Col Span="4"><p class="height-120">col-4</p></Col>
                <Col Span="4"><p class="height-80">col-4</p></Col>
            </Row>
        </div>
    </Demo>
</DemoCard>

<DemoCard id="grid-demo-flex-Order">
    <Title>Flex排序</Title>
    <Description>
        @(@"
通过 `Order` 来改变元素的排序。
")
    </Description>
    <Demo>
        <div id="grid-demo-flex-Order">
            <Row>
                <Col Span="6" Order="4">
                    1 col-Order-4
                </Col>
                <Col Span="6" Order="3">
                    2 col-Order-3
                </Col>
                <Col Span="6" Order="2">
                    3 col-Order-2
                </Col>
                <Col Span="6" Order="1">
                    4 col-Order-1
                </Col>
            </Row>
        </div>
    </Demo>
    <Styles>
        <style>
            #grid-demo-flex-Order .ant-row {
                background-color: rgba(128, 128, 128, 0.08);
            }
        </style>
    </Styles>
</DemoCard>

<DemoCard id="grid-demo-responsive">
    <Title>响应式布局</Title>
    <Description>
        @(@"
参照 Bootstrap 的 [响应式设计](http://getbootstrap.com/css/#grid-media-queries)，预设五个响应尺寸：`xs` `sm` `md` `lg` `xl`  `xxl`。
")
    </Description>
    <Demo>
        <Row>
            <Col Xs="2" Sm="4" Md="6" Lg="8" Xl="10">
                Col
            </Col>
            <Col Xs="20" Sm="16" Md="12" Lg="8" Xl="4">
                Col
            </Col>
            <Col Xs="2" Sm="4" Md="6" Lg="8" Xl="10">
                Col
            </Col>
        </Row>
    </Demo>
</DemoCard>