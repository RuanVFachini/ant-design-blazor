<Select Mode="multiple"
        Style="width: 100%"
        Placeholder="Please select"
        DefaultValue="@_defaultValues"
        @bind-Value="@_value"
        AllowClear
        OnChange="OnChange">
    @foreach (var item in _items)
    {
        <SelectOption Value="@item.Value">@item.Label</SelectOption>
    }
</Select>
<Select Mode="multiple"
        Style="width: 100%"
        Placeholder="Please select"
        DefaultValue="@_defaultValues"
        Disabled>
    @foreach (var item in _items)
    {
        <SelectOption Value="@item.Value">@item.Label</SelectOption>
    }
</Select>
<label>Selected Values: @_value</label>

@using OneOf;
@code
{
    public class CustomListItem
    {
        public string Label { get; set; }
        public string Value { get; set; }
    }

    private string _value;
    private CustomListItem[] _items;
    private string[] _defaultValues;
    
    protected override void OnInitialized()
    {
        const int min = 10;
        const int max = 36;
        _defaultValues = new[] { "v0a10", "v0c12" };

        _items = new CustomListItem[max - min];
        for (var i = min; max > i; i++)
        {
            var l = Convert.ToString(i, 16).PadLeft(2, '0') + i;
            _items[i - min] = new CustomListItem() {Label = $"l{l}", Value = $"v{l}"};
        }
    }

    private void OnChange(OneOf<string, IEnumerable<string>, LabeledValue, IEnumerable<LabeledValue>> value, OneOf<SelectOption, IEnumerable<SelectOption>> option)
    {
        Console.WriteLine($"selected: ${value}");
    }
}